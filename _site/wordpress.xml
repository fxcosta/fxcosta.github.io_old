<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2016-08-15 21:42"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>new Blog("Felix", "@fxcosta");</title>
<link>https://fxcosta.wordpress.com</link>
<description>Web Development, IT, work hard and learning. Everybody.</description>
<pubDate>Mon, 15 Aug 2016 21:42:07 +0000</pubDate>
<language>pt-BR</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://fxcosta.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>fx3costa0</wp:author_login>
  <wp:author_email>fx3costa@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[fx3costa]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>53333</wp:term_id>
  <wp:category_nicename>arquitetura-de-software</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Arquitetura de Software]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>50759</wp:term_id>
  <wp:category_nicename>desenvolvimento-web</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Desenvolvimento Web]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>96192961</wp:term_id>
  <wp:category_nicename>laravel-2</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Laravel]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>21243</wp:term_id>
  <wp:category_nicename>seguranca</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Segurança]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>4276</wp:term_id>
  <wp:tag_slug>api</wp:tag_slug>
  <wp:tag_name><![CDATA[api]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>35401415</wp:term_id>
  <wp:tag_slug>desenvolvimento-web-2</wp:tag_slug>
  <wp:tag_name><![CDATA[desenvolvimento web]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>42783087</wp:term_id>
  <wp:tag_slug>design-oo</wp:tag_slug>
  <wp:tag_name><![CDATA[design oo]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1078088</wp:term_id>
  <wp:tag_slug>dualboot</wp:tag_slug>
  <wp:tag_name><![CDATA[dualboot]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>366167593</wp:term_id>
  <wp:tag_slug>form-model-binding</wp:tag_slug>
  <wp:tag_name><![CDATA[form model binding]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5445</wp:term_id>
  <wp:tag_slug>full-disclosure</wp:tag_slug>
  <wp:tag_name><![CDATA[Full Disclosure]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1017</wp:term_id>
  <wp:tag_slug>java</wp:tag_slug>
  <wp:tag_name><![CDATA[java]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>86504237</wp:term_id>
  <wp:tag_slug>laravel</wp:tag_slug>
  <wp:tag_name><![CDATA[laravel]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>610</wp:term_id>
  <wp:tag_slug>linux</wp:tag_slug>
  <wp:tag_name><![CDATA[linux]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>458</wp:term_id>
  <wp:tag_slug>php</wp:tag_slug>
  <wp:tag_name><![CDATA[php]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>43595792</wp:term_id>
  <wp:tag_slug>refind</wp:tag_slug>
  <wp:tag_name><![CDATA[refind]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15314</wp:term_id>
  <wp:tag_slug>rest</wp:tag_slug>
  <wp:tag_name><![CDATA[rest]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>21243</wp:term_id>
  <wp:tag_slug>seguranca</wp:tag_slug>
  <wp:tag_name><![CDATA[Segurança]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>107226</wp:term_id>
  <wp:tag_slug>solid</wp:tag_slug>
  <wp:tag_name><![CDATA[solid]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4207734</wp:term_id>
  <wp:tag_slug>uefi</wp:tag_slug>
  <wp:tag_name><![CDATA[uefi]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>151</wp:term_id>
  <wp:tag_slug>web</wp:tag_slug>
  <wp:tag_name><![CDATA[web]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7572</wp:term_id>
  <wp:tag_slug>webservices</wp:tag_slug>
  <wp:tag_name><![CDATA[webservices]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>800</wp:term_id>
  <wp:tag_slug>windows</wp:tag_slug>
  <wp:tag_name><![CDATA[windows]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title>new Blog(&#034;Felix&#034;, &#034;@fxcosta&#034;);</title>
		<link>https://fxcosta.wordpress.com</link>
	</image>
	<item>
  <title>Sobre</title>
  <link>https://fxcosta.wordpress.com/sobre/</link>
  <pubDate>Thu, 02 Jan 2014 01:34:30 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://v0idm4in.wordpress.com/?page_id=1</guid>
  <description/>
  <content:encoded><![CDATA[Meu nome é Felix Costa, atualmente cursando Sistemas de Informação e amante da área desde 2009 quando já estudava de forma autodidata alguns assuntos relacionados a exploitation e dev. Trabalho com Desenvolvimento Web - com maior foco em PHP, Design OO e padrões - e decidi criar esse blog como forma de incentivo para meus estudos e de meus amigos e como forma de contribuição para a comunidade, tentando retribuir com o pouco, humilde e raso conhecimento nesse vale imenso que é o mundo do desenvolvimento de software.

Mais sobre mim?
<a href="http://linkedin.com/in/fxcosta" target="_blank">Linkedin </a>  //   fx3costa@gmail.com]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1</wp:post_id>
  <wp:post_date>2014-01-02 01:34:30</wp:post_date>
  <wp:post_date_gmt>2014-01-02 01:34:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sobre</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[59574466]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Home</title>
  <link>https://fxcosta.wordpress.com/?p=10</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.wordpress.com/?p=10</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2014-01-04 01:15:02</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[10]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://v0idm4in.wordpress.com/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1388798103]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://fxcosta.wordpress.com/?p=11</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.wordpress.com/?p=11</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2014-01-04 01:15:03</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1388798104]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Home</title>
  <link>https://fxcosta.wordpress.com/?p=12</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.wordpress.com/?p=12</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2014-01-04 01:15:40</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[12]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://v0idm4in.wordpress.com/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1388798141]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://fxcosta.wordpress.com/?p=13</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.wordpress.com/?p=13</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2014-01-04 01:15:41</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1388798142]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>euealexturner</title>
  <link>https://fxcosta.wordpress.com/euealexturner/</link>
  <pubDate>Sat, 08 Feb 2014 03:09:52 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2014/02/euealexturner.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2014-02-08 03:09:52</wp:post_date>
  <wp:post_date_gmt>2014-02-08 03:09:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>euealexturner</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2014/02/euealexturner.jpg</wp:attachment_url>
</item>
<item>
  <title>DSCF1291</title>
  <link>https://fxcosta.wordpress.com/dscf1291/</link>
  <pubDate>Sat, 08 Feb 2014 03:23:45 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2014/02/dscf1291.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2014-02-08 03:23:45</wp:post_date>
  <wp:post_date_gmt>2014-02-08 03:23:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dscf1291</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2014/02/dscf1291.jpg</wp:attachment_url>
</item>
<item>
  <title>PQAAAFTI30S2-Im8BXQvy5QSlW8iztraXwJdCi5XKhKeZvnRTIRmx5WDJbLL-D3KD_14mxHg9RuyUW4rsyjOLgCoUIQAm1T1UH2ZG4WHkV8N8v11_RfLk78cJC8f</title>
  <link>https://fxcosta.wordpress.com/pqaaafti30s2-im8bxqvy5qslw8iztraxwjdci5xkhkezvnrtirmx5wdjbll-d3kd_14mxhg9ruyuw4rsyjolgcouiqam1t1uh2zg4whkv8n8v11_rflk78cjc8f/</link>
  <pubDate>Sat, 08 Feb 2014 03:26:14 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2014/02/pqaaafti30s2-im8bxqvy5qslw8iztraxwjdci5xkhkezvnrtirmx5wdjbll-d3kd_14mxhg9ruyuw4rsyjolgcouiqam1t1uh2zg4whkv8n8v11_rflk78cjc8f.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>18</wp:post_id>
  <wp:post_date>2014-02-08 03:26:14</wp:post_date>
  <wp:post_date_gmt>2014-02-08 03:26:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pqaaafti30s2-im8bxqvy5qslw8iztraxwjdci5xkhkezvnrtirmx5wdjbll-d3kd_14mxhg9ruyuw4rsyjolgcouiqam1t1uh2zg4whkv8n8v11_rflk78cjc8f</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2014/02/pqaaafti30s2-im8bxqvy5qslw8iztraxwjdci5xkhkezvnrtirmx5wdjbll-d3kd_14mxhg9ruyuw4rsyjolgcouiqam1t1uh2zg4whkv8n8v11_rflk78cjc8f.jpg</wp:attachment_url>
</item>
<item>
  <title>PQAAAG_kkuDUZEFVqYF64bWuv3CCV60eXuryYpI1QDGElgssoWPxsy1BntjdTDdfLSCE1C0EKM7EyCGU6OkGIBUDQLoAm1T1UEfKwyhSM3cplxEQ5dIymX1cAcF1</title>
  <link>https://fxcosta.wordpress.com/pqaaag_kkuduzefvqyf64bwuv3ccv60exuryypi1qdgelgssowpxsy1bntjdtddflsce1c0ekm7eycgu6okgibudqloam1t1uefkwyhsm3cplxeq5diymx1cacf1/</link>
  <pubDate>Sat, 08 Feb 2014 03:26:50 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2014/02/pqaaag_kkuduzefvqyf64bwuv3ccv60exuryypi1qdgelgssowpxsy1bntjdtddflsce1c0ekm7eycgu6okgibudqloam1t1uefkwyhsm3cplxeq5diymx1cacf1.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>19</wp:post_id>
  <wp:post_date>2014-02-08 03:26:50</wp:post_date>
  <wp:post_date_gmt>2014-02-08 03:26:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pqaaag_kkuduzefvqyf64bwuv3ccv60exuryypi1qdgelgssowpxsy1bntjdtddflsce1c0ekm7eycgu6okgibudqloam1t1uefkwyhsm3cplxeq5diymx1cacf1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2014/02/pqaaag_kkuduzefvqyf64bwuv3ccv60exuryypi1qdgelgssowpxsy1bntjdtddflsce1c0ekm7eycgu6okgibudqloam1t1uefkwyhsm3cplxeq5diymx1cacf1.jpg</wp:attachment_url>
</item>
<item>
  <title>DSCF4501</title>
  <link>https://fxcosta.wordpress.com/dscf4501/</link>
  <pubDate>Sat, 08 Feb 2014 03:31:01 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2014/02/dscf4501.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>20</wp:post_id>
  <wp:post_date>2014-02-08 03:31:01</wp:post_date>
  <wp:post_date_gmt>2014-02-08 03:31:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dscf4501</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2014/02/dscf4501.jpg</wp:attachment_url>
</item>
<item>
  <title>DSCF5870</title>
  <link>https://fxcosta.wordpress.com/dscf5870/</link>
  <pubDate>Sat, 08 Feb 2014 03:33:45 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2014/02/dscf5870.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>21</wp:post_id>
  <wp:post_date>2014-02-08 03:33:45</wp:post_date>
  <wp:post_date_gmt>2014-02-08 03:33:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dscf5870</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2014/02/dscf5870.jpg</wp:attachment_url>
</item>
<item>
  <title>Princípios SOLID e design OO</title>
  <link>https://fxcosta.wordpress.com/?p=25</link>
  <pubDate>Sat, 30 May 2015 19:13:00 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">https://fxcosta.wordpress.com/?p=25</guid>
  <description/>
  <content:encoded><![CDATA[Como primeiro post do meu blog, quero falar um pouco sobre SOLID - que provavelmente você ao menos já ouviu falar em algum lugar -, que nada mais é do que princípios básicos do design orientado a objetos. Mas antes de mais nada, o que de fato é Design Orientado a Objeto? Forçar esses princípios nos fazem pensar melhor em nossos códigos e claro, melhorar o fluxo do nosso software. Uma arquitetura mal planejada é garantia de um projeto com problemas em diversas fases, desde a construção até a manutenção.

<!--more-->

Quando vamos desenvolver um software orientado a objetos, devemos ter dois objetivos principais em mente enraizados: baixo acoplamento e alta coesão. Pensar de maneira diferente pode ser um tiro no pé.

Já os princípios SOLID que foram abordados inicialmente por Robert Martin, em um artigo chamado <a href="http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod">Principles Of Ood</a>, onde ele elaborou cinco técnicas de programação OO onde cada técnica é uma das letras da palavra SOLID (<strong>Single responsibility, Open-closed, Liskov substitution, Interface segregation e Dependency inversion</strong>). E qual seu principal proposito? Facilitar a manutenção, legibilidade e vida do nosso código. Ah e claro, evitar dores de cabeças futuras.

Vamos ver um pouco sobre cada um desses princípios:

<strong>S</strong>RP: <strong>Single Responsibility Principle</strong> (Princípio da Responsabilidade Única)  - Olha a complexidade desse princípio: Uma classe só deve ter uma e somente uma razão para mudar. Ou seja, se observarmos que há mais de uma razão para ela mudar, essa classe deve ser separada em duas. Ela deve ser especializada de tal modo que execute apenas uma tarefa e, de preferência, de uma forma bem feita, evitando aquela classe que faz de tudo um pouco com inúmeras tarefas agregadas a ela. Um exemplo bem simples de classe que viola esse princípio:

[code language="java"]

public class Cliente(){

public void save(Cliente cli){}
public void sendEmail(){}
public void getTotalPrice(){}
}

[/code]

&nbsp;

Uma classe que faz de tudo, persiste, envia e-mail, pega o valor total das compras dele. Isso é um exemplo de muitas responsabilidades em uma única classe. Uma solução para isso - e isso depende das camadas de abstração que o desenvolvedor cria - seria uma classe especifica para persistência, uma classe ou serviço de e-mail e poderiamos ter getTotalPrice() em Cliente.

<strong>O</strong>CP: <strong>Open/Closed Principle</strong> (Princípio Aberto / Fechado) - Quando você desenhar as classes do seu sistema você deve prestar atenção para que ela seja abertas para extensão, fechadas para modificação. Ou seja, uma subclasse não pode destruir o conceito da classe pai, por exemplo. Você deve extender, mas não mudar. Se precisar é por que ela esta mal desenhada. Foi exatamente que meu professor de Engenharia descreveu esse princípio.

<strong>L</strong>SP: <strong>Liskov Substitution Principle</strong> (Princípio da Substituição de Liskov) - Os tipos derivados devem poder ser substituídos por seus ancestrais. Ou seja se você utilizar um objeto e através de polimorfismo manipulá-lo como sendo do seu tipo base, ele deve funcionar corretamente e deve se comportar da mesma forma como se comportaria se ele realmente fosse daquele tipo. Vamos a um exemplo bem didático que encontrei:

[code language="java"]

class Ave {
public void voar(){}
public void comer(){}
}

class Corvo extends Ave {}

class Avestruz extends Ave{
  voar(){
    throw new UnsupportedOperationException();
  }
}

public TesteDePassaros{
  public static void main(String[] args){
    List&amp;lt;Ave&amp;gt; aveList = new ArrayList&amp;lt;Ave&amp;gt;();
    aveList.add(new Ave());
    aveList.add(new Corvo());
    aveList.add(new Avestruz());
    vamosVoarAves ( aveList );
  }
  static void vamosVoarAves ( List&amp;lt;Ave&amp;gt; aveList ){
    for ( Ave p : aveList ) {
      p.voar();
    }
  }
}
[/code]

O que vai acontecer se rodarmos? Te garanto que o Avestruz não vai voar. Qual seria a melhor implementação nesse caso? Pausa pra meditação ninja... Veja

[code language="java"]

class Ave{
  public void comer(){}
}

class AveVoa extends Ave{
  public void fly()()
}
class AveNaoVoa extends Ave{}

[/code]

Agora faz mais sentido, temos dois tipos de aves.

<strong>I</strong>SP: <strong>Interface Segregation Principle</strong> (Princípio de Segregação da Interface) - Muitas interfaces específicas são melhores do que uma interface de uso geral e nossos clientes não devem ser forçados a implementar uma que ele realmente não utilize. E isso é facilmente entendível com um exemplo. Vejamos:

[code language="java"]

public interface Animal {
    void voar();
    void correr();
    void latir();
}
public class Ave implements Animal {
    public void latir() { /* Não faz uso disso */ }
    public void correr() {
        // correndo...
    }
    public void voar() {
        // voando...
    }
}
public class Gato implements Animal {
    public void voar() { throw new Exception(&amp;quot;Ele não voa, parsa&amp;quot;); }
    public void latir() { throw new Exception(&amp;quot;Ele não lati, parsa&amp;quot;); }
    public void correr() {
        // correndo
    }
}
public class Cachorro implements Animal {
    public void voar() { }
    public void latir() {
        // latindo...
    }
    public void correr() {
        // correndo...
    }
}

[/code]

Percebeu que muitos métodos nem fazem sentido existir? Nossos clientes implementaram uma interface mas eles não necessariamente precisam de todos os métodos. Como poderíamos corrigir isso de uma forma mais atraente?

[code language="java"]

public interface Voador {
    void voar();
}
public interface Corredor {
    void correr();
}
public interface Latidor {
    void latir();
}
public class Ave implements Voador, Corredor {
    public void correr() {

    }
    public void voar() {

    }
}
public class Gato implements Corredor{
    public void correr() {

    }
}
public class Cachorro implements Corredor, Latidor {
    public void latir() {  

    }
    public void correr() {

    }
}

[/code]

E agora? muito mais elegante o seu código e de fácil manutenção. Mas ainda falta um último princípio.

<strong>D</strong>IP: <strong>Dependency Inversion Principle</strong> (Princípio de Inversão da Dependência) - Partes de mais alto nível não devem depender das partes de menor nível. Ambas devem depender de abstrações; e Abstrações não devem depender de detalhes. Os detalhes é que devem depender de abstrações. Este princípio é muito poderoso, e é a base por trás do conceito de injeção de dependências. É algo um pouco mais complexo até pra explicar, mas observe o exemplo que acredito que você entenderá melhor.

[code language="java"]

class Trabalhador {
	public void trabalhar() {
		// ....&amp;quot;trabaiando&amp;quot;
	}
}

class Gestor {
	Trabalhador trabalhadorUm;

	public void setTrabalhador(Trabalhador t) {
		trabalhadorUm = t;
	}

	public void gerir() {
		trabalhadorUm.trabalhar();
	}
}

class SuperTrabalhador {
	public void trabalhar() {
		//.... trabalhando pra caramba
	}
}

[/code]

Quais desvantagem desse código? Não vou precisar alterar Gestor caso queira que ele também aceite um SuperTrabalhador. Ele não precisa saber exatamente que tipo de trabalhador é, se é um normal ou super, ele precisa receber algum deles e simplesmente colocar pra trabalhar, solucionando essa dependência.

Como isso poderia ser solucionado:

[code language="java"]
interface ITrabalhador {
	public void trabalhar();
}

class Trabalhador implements ITrabalhador{
	public void trabalhar() {

	}
}

class SuperTrabalhador  implements ITrabalhador{
	public void trabalhar() {

	}
}

class Gestor {
	ITrabalhador trabalhadorUm;

	public void setTrabalhador(ITrabalhador t) {
		trabalhadorUm = t;
	}

	public void gerir() {
		trabalhadorUm.trabalhar();
	}
}
[/code]

Ou seja, agora Gestor depende de interfaces abstratas e não de classes concretas, uma vez que implementações concretas são mais propensas a mudanças.

Utilizando os princípios SOLID é possível evitar problemas muito comuns:
<ul>
	<li>Dificuldade com unit testings;</li>
	<li>Código macarrônico, sem estrutura ou padrão;</li>
	<li>Dificuldades de isolar funcionalidades;</li>
	<li>Duplicação de código, uma alteração precisa ser feita em N pontos;</li>
	<li>Fragilidade, o código quebra facilmente em vários pontos após alguma mudança.</li>
</ul>
Esse foi apenas uma introdução sobre o assunto, até mesmo como guia para estudos próprios futuros. Pretendo falar a respeito de cada um de forma minuciosa com exemplos in-the-real-world.

Qualquer dúvida ou correção, peço-lhe humildemente que entre em contato comigo ou comente abaixo. Será de grande ajuda para manter o debate sobre esse assunto tão importante que é o design de software.

<strong>Referências</strong>:
<ul>
	<li><a href="http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod" target="_blank">Clean Code – Uncle Bob</a></li>
	<li><a href="http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf" target="_blank">Design Principles and Design Patterns</a> (PDF)</li>
	<li><a href="http://eduardopires.net.br/2013/04/orientacao-a-objeto-solid/">Orientação a Objetos - SOLID</a></li>
	<li><a href="http://www.oodesign.com/">OODesign.com</a></li>
	<li><a href="http://blog.gauffin.org/2012/05/solid-principles-with-real-world-examples/">SOLID Principles with real world examples</a></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>25</wp:post_id>
  <wp:post_date>2015-05-30 19:13:00</wp:post_date>
  <wp:post_date_gmt>2015-05-30 19:13:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>principios-solid-e-design-oo</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arquitetura-de-software"><![CDATA[Arquitetura de Software]]></category>
  <category domain="post_tag" nicename="desenvolvimento-web-2"><![CDATA[desenvolvimento web]]></category>
  <category domain="post_tag" nicename="design-oo"><![CDATA[design oo]]></category>
  <category domain="post_tag" nicename="java"><![CDATA[java]]></category>
  <category domain="post_tag" nicename="solid"><![CDATA[solid]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[principios-solid-design-oo-e-evitando-dores-de-cabeca]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[59574466]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11171075007]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Diferença entre API e Web Service de maneira simples</title>
  <link>https://fxcosta.wordpress.com/2015/05/31/diferenca-entre-api-e-web-service-de-maneira-simples/</link>
  <pubDate>Sun, 31 May 2015 00:00:24 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">https://fxcosta.wordpress.com/?p=32</guid>
  <description/>
  <content:encoded><![CDATA[Confesso que essa era uma pergunta que me intrigava. Eu via o conceito dos dois, conversas sobre os dois, mas ainda não tinha entendido qual a diferença entre eles e quando se referenciar a um ou a outro.

<!--more-->

Pois bem, basicamente é o seguinte:

<strong>API (Application Programming Interface)</strong> - É como uma interface entre dois programas diferentes de modo que eles possam se comunicar um com o outro. Ou seja, uma API é a forma que terceiros disponibilizam uma interface de modo que possamos consumir um determinado serviço deles sem nos preocuparmos com a implementação do mesmo. As API podem usar qualquer meio de comunicação para iniciar a interação entre as aplicações. Por exemplo, as chamadas de sistema (System Calls) são invocados usando interrupções da API do kernel Linux.

<strong>Web Services</strong> -  é uma interface projetada para se comunicar via rede. É uma API que usa obrigatoriamente a rede. Tipicamente, HTTP é o protocolo mais comumente usado para a comunicação. Web Services também usam SOAP, REST e XML-RPC como meio de comunicação. Ou seja, quando uma API precisa enviar dados através de rede, estamos falando de Web Services.

Só que é preciso estar atento a alguns detalhes. Uma API geralmente envolve chamar funções de dentro de um programa. Por exemplo, as aplicações de desktop, como planilhas e documentos de texto usam VBA e APIs baseados em COM que não envolvem a Web e mesmo aplicações de servidor como o Joomla podem usar uma API PHP presente no próprio servidor sem necessidade da rede.

Ou seja, resumindo de maneira bem simples:
<ul>
	<li>Todos os Web Services são API. Mas nem todas as API são Web Service.</li>
	<li>Web Services podem não executar todas as tarefas que uma API normalmente realiza (ou pode realizar).</li>
	<li>Um serviço Web utiliza apenas três estilos de comunicação: SOAP, REST e XML-RPC enquanto que a API pode usar qualquer estilo de comunicação.</li>
	<li>Um Web Service sempre precisa de uma rede para o seu funcionamento enquanto uma API não precisa.</li>
	<li>Uma API facilita a interface direta com um aplicativo enquanto que um Web Service é uma aplicação.</li>
</ul>
<strong>Referências</strong>:
<ul>
	<li><a href="http://pt.wikipedia.org/wiki/Web_service">Wikipedia</a></li>
	<li><a href="http://www.differencebetween.net/technology/internet/difference-between-api-and-web-service/">Difference Between</a></li>
	<li><a href="http://pt.stackoverflow.com/questions/17501/qual-%C3%A9-a-diferen%C3%A7a-de-api-biblioteca-e-framework">StackOverflow</a></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>32</wp:post_id>
  <wp:post_date>2015-05-31 00:00:24</wp:post_date>
  <wp:post_date_gmt>2015-05-31 00:00:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>diferenca-entre-api-e-web-service-de-maneira-simples</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="api"><![CDATA[api]]></category>
  <category domain="post_tag" nicename="desenvolvimento-web-2"><![CDATA[desenvolvimento web]]></category>
  <category domain="post_tag" nicename="rest"><![CDATA[rest]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="web"><![CDATA[web]]></category>
  <category domain="post_tag" nicename="webservices"><![CDATA[webservices]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[59574466]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11177027137]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1</wp:comment_id>
    <wp:comment_author><![CDATA[Matheus Candido]]></wp:comment_author>
    <wp:comment_author_email>mcandisilva@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>187.0.190.201</wp:comment_author_IP>
    <wp:comment_date>2015-08-18 18:13:53</wp:comment_date>
    <wp:comment_date_gmt>2015-08-18 18:13:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Melhor explicação que achei na internet, simples e objetivo!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1439921633.901371002197265625;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1439941921</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1439941921</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1439926985.68943309783935546875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1439941921.4510219097137451171875;s:5:"event";s:15:"status-approved";s:4:"user";s:9:"fx3costa0";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[Clerio Hickmann]]></wp:comment_author>
    <wp:comment_author_email>clerio@live.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.clearview.com.br</wp:comment_author_url>
    <wp:comment_author_IP>189.6.180.33</wp:comment_author_IP>
    <wp:comment_date>2015-11-17 18:28:15</wp:comment_date>
    <wp:comment_date_gmt>2015-11-17 18:28:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ajudou!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1448248441</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1448248441</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1447784896.1841800212860107421875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1447788561.406239986419677734375;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1448248441.1076619625091552734375;s:5:"event";s:15:"status-approved";s:4:"user";s:9:"fx3costa0";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[Rômulo]]></wp:comment_author>
    <wp:comment_author_email>romulosantosferreira@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>200.254.12.132</wp:comment_author_IP>
    <wp:comment_date>2016-08-02 11:50:24</wp:comment_date>
    <wp:comment_date_gmt>2016-08-02 11:50:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Muito bom. Ajudou!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1470138624.709003925323486328125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1470143464.0635640621185302734375;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Por que devemos preferir composição ao invés de herança?</title>
  <link>https://fxcosta.wordpress.com/2015/09/06/por-que-devemos-preferir-composicao-ao-inves-de-heranca/</link>
  <pubDate>Sun, 06 Sep 2015 05:47:17 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">https://fxcosta.wordpress.com/?p=45</guid>
  <description/>
  <content:encoded><![CDATA[Logo quando estamos começando nossa longa caminhada sobre os vales escuros da orientação a objetos - e digo escuro por que cada dia que passa se aprende mais - aprendemos o uso e importância da herança. Se você está lendo esse artigo suponho que ao menos já tenha visto uma situação onde você viu ou implementou herança.

Mas, será que minha classe realmente É-UM outra classe? Será que eu realmente tenho que adotar tais comportamentos e até mesmo sobrescreve-los? Será que a classe filha realmente precisa de todos esses métodos e não somente de um ou dois? Se a herança é ferramenta básica de extensão e reuso de funcionalidade por que seu uso é extremamente desencorajado? Bem, vamos começar por partes.<!--more-->

Vamos ser diretos e listar os problemas da herança - levando em consideração que o leitor tenha noção da herança, seu objetivo e motivação. Primeiro ponto, inquestionável é: herança quebra o encapsulamento. Mas hein?

Para essa afirmação vamos usar um exemplo claro, sem códigos ainda: Temos uma super classe chamada Dispositivo. Atualmente há duas classes derivadas de Dispositivo chamadas DispositivoA e DispositivoB e, logicamente, ambas herdam todos os métodos de Dispositivo mas vamos pegar um para exemplo que é chamado de conectarEntrada que é responsável pela lógica de como os dipositivos são conectados. Em nossa abstração - e ingenuidade - definimos o corpo desse método em Dispositivo e nas classes derivadas apenas nos referenciamos a ele, afinal, é o mesmo comportamento, não é? Porém, requisitos mudam e agora passamos a ter um novo tipo de dispositivo, o DispositivoC onde seu modo de entrada será diferente. A primeira coisa que pensamos é: ok, irei sobrescrever o método conectarEntrada, fazendo apenas os ajustes necessários. Obviamente o que você precisa? Conhecer como a super classe implementa esse método, daí você abre a classe, observa o que tem e comete a quebra do encapsulamento. Acabou encapsulamento, você violou um dos pilares da OO. Você tem conhecimento especifico demais.

E isso fica pior quando DispositivoC não usa metade dos métodos de Dispositivo mas mesmo assim continuamos a trabalhar com a herança afinal alguns métodos ainda são aproveitáveis. Comodismo?

Resumindo, o encapsulamento entre Dispositivos e DispositivoA, B e C é fraco, e o acoplamento é forte. Assim, toda vez que Dispositivo for alterado todas as subclasses serão afetadas. A nossa estrutura está presa, acoplada, e não pode sofrer alterações graves. Mas requisitos mudam, e nossos clientes não estão nenhum pouco preocupados com isso.

E isso não é novidade, vide o artigo de Alan Snyder, <a href="http://citeseer.ist.psu.edu/513482.html">Encapsulation and Inheritance in Object-Oriented Programming Languages</a>, de 1986! Não convencido? Olha o que a <a href="https://en.wikipedia.org/wiki/Design_Patterns">Gang of Four</a> diz: "Porque herança expõe para uma subclasse detalhes da implementação do seu pai, por isso muitas vezes é dito que "herança é quebra de encapsulamento".

Beleza, então se você tá falando que esse lance de herança deve ser analisada com muito, mas muito cuidado, que solução usar? Joshua Bloch em seu livro Effective Java nos diz: prefira composição em vez de herança. Vamos ver isso melhor!

Quando utilizamos composição, instanciamos a classe que desejamos dentro de nosso código, ex: DispositivoC não herda mais de Dispositivo, ele não É-UM Dispositivo, ele TEM um Dispositivo. Dessa forma, estamos estendendo as responsabilidades pela delegação de trabalho a outros objetos, ou seja, DispositivoA tem um comportamento parecido com Dispositivo? Beleza, simplesmente use o comportamento de Dispositivo ao invés de ter essa responsabilidade em DispositivoA. Ou seja, é um modo mais geral de estender uma classe, onde um objeto, em vez de realizar uma de suas tarefas, delega tal tarefa a um objeto auxiliar associado, que no caso você usaria como classe pai.

Ao utilizar a composição, teremos muito mais flexibilidade, além de ser mais comum em muitos padrões de projetos. Dessa forma temos projeto mais flexível a mudanças, respeitando os princípios de responsabilidade única, substituição de Liskov e tornando nosso código desacoplado. Qualquer alteração feita em Dispositivo não quebrará nossos clientes diretamente e podemos usar somente métodos que sejam realmente necessários.

Hum, não entendi muito bem ainda, mas já que você está falando vou usar somente composição! Não, aí é que entra o erro. A herança é sim útil, mas somente caso faça sentido o relacionamento É-UM. Meu exemplo pode ser citado como um mal exemplo por que da mesma forma como ele serve para ilustrar uma desvantagem no uso de herança ele pode ser exatamente a solução. Tudo depende do seu projeto e é por isso que vou listar quais benefícios e desvantagens de cada um deles:

<strong>Benefícios da herança:</strong>
<ul>
	<li>Reusa tudo o que é comum nas classes relacionadas e isola o que for diferente.</li>
	<li>A herança é vista diretamente no código</li>
	<li>Desenvolvimento mais rápido em comparação com composição caso os problemas da herança não sejam um problema para sua aplicação.</li>
</ul>
<strong>Problemas da herança:</strong>
<ul>
	<li>O encapsulamento entre classes e subclasses é fraco (o acoplamento é forte). Ou seja, mudar da superclasse pode afetar todas as subclasses além de violar um dos princípios da OO que é manter um fraco acoplamento.</li>
	<li>Às vezes um objeto precisa ser de uma classe diferente em momentos diferentes e com herança isso não é possível. Imagine que usamos herança no caso do DispositivoC. Mas puts, agora faz mais sentido que ele se comporte como DispositivosPaiTipoC. Como alterar isso se estamos parafusados já com a herança? Vamos ter que quebrar todos os clientes e refatorar tudo.</li>
	<li>Relacionamento estático.</li>
</ul>
<strong>Benefícios da composição:</strong>
<ul>
	<li>O comportamento pode ser escolhido em tempo de execução em vez de estar amarrado em tempo de compilação.</li>
	<li>Melhorarmos nossa abstração trabalhando com interfaces.</li>
	<li>Detalhes internos dos objetos instanciados não são visíveis.</li>
	<li>Respeitamos o princípio da responsabilidade única, uma vez que uma determinada ação é responsabilidade da classe pai e não necessariamente preciso impor essa responsabilidade em suas classes derivadas.</li>
	<li>Respeito ao princípio da substituição de Liskov, uma vez que é muito fácil eu quebrar esse princípio com um override que seja mais forte que o método padrão da classe pai.</li>
</ul>
<strong>Problemas da composição:</strong>
<ul>
	<li>Não diria que o software fica mais complexo, mas você deverá estar mais atento ao design da sua aplicação e isso irá requerer um melhor planejamento das classes que terão dependências de outras classes e etc.</li>
	<li>Caso não seja o caso necessário, terá complexidade desnecessária a aplicação e isso acarretará a maior prazo de entrega do mesmo se for o caso.</li>
</ul>
Resumindo se o objeto "é um tipo especial de" e não "um papel assumido por, se o objeto nunca tem que mudar para outra classe futuramente e/o a subclasse estende a superclasse mas não faz override ou anulação de variáveis e/ou métodos, use herança, do contrário, fuga desse problema!

Qualquer feedback, sugestão, erros (e isso é bem possível), críticas ou qualquer coisa do tipo, deixe seu comentário ou manda um e-mail!

<strong>Referências e fontes de estudo</strong>:

http://blog.berniesumption.com/software/inheritance-is-evil-and-must-be-destroyed/

http://www.dsc.ufcg.edu.br/~jacques/cursos/map/html/pat/herancavscomposicao.htm

http://blog.caelum.com.br/como-nao-aprender-orientacao-a-objetos-heranca/

http://imasters.com.br/artigo/20380/java/heranca-x-composicao/

https://en.wikipedia.org/wiki/Design_Patterns

http://groselhas.maurogeorge.com.br/prefira-composicao-ao-inves-de-heranca-um-simples-exemplo-em-ruby.html#sthash.IXxGlACd.dpbs

http://marcionorberto.blogspot.com.br/2013/04/heranca-e-delegacao.html

http://www.devmedia.com.br/heranca-versus-composicao-qual-utilizar/26145]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>45</wp:post_id>
  <wp:post_date>2015-09-06 05:47:17</wp:post_date>
  <wp:post_date_gmt>2015-09-06 05:47:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>por-que-devemos-preferir-composicao-ao-inves-de-heranca</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_oembed_39d776fb1084d667729438ea45ecc91e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_869bbfc5a93d85b5f4bdd8fb721c5f88</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_968f9e5c6a08261203a8cd635f60afe9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_49b2f2b35ccaa7317744bdc4f2807630</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_05d73e7a2f61aad1c703c89b4cd9159c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5054a627f442296252a9e3d271f4611a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_95efb789e76d3fdc1b81b79e06b0894b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d123af1e757a8d1f8be665533d413d26</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[59574466]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_97b4ff4e1792c4f84d66591ee30318f8</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1bf1521d446a8fbb707388f070d77099</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2c9ddaa50a332f09e9b15349e6a45e0f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a26cc39e6d6048603c58ab054036a4cd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e5abed9204ca679b4893c09b55769581</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ce63d11c8fe837fdd3978cb7c90b6ac3</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_bc8d6e1240418401a3bad4579a3b0697</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_93721855f9872dbee86b67461b072f8f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[14484530368]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_199d74dcd2dc08368c78bd4442fd9fac</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4105221f2f8853620300a9d30c92cf23</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_49e1d2677599021569e677692f4c5f6d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_eb8a498680ab564c2249dffcbbdb73d0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b31821819220833e809be1625c81122c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f5f0aa638c33576c9fc378169e376e9d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9201d422108209504c7b6b71ac0f4025</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_79fc265db3309f206354c8fe2dc40b63</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>PHP-Awake-For-Code-Programmer-Wallpaper-HD</title>
  <link>https://fxcosta.wordpress.com/php-awake-for-code-programmer-wallpaper-hd/</link>
  <pubDate>Mon, 07 Sep 2015 03:36:32 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2015/09/php-awake-for-code-programmer-wallpaper-hd.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>56</wp:post_id>
  <wp:post_date>2015-09-07 03:36:32</wp:post_date>
  <wp:post_date_gmt>2015-09-07 03:36:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>php-awake-for-code-programmer-wallpaper-hd</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2015/09/php-awake-for-code-programmer-wallpaper-hd.png</wp:attachment_url>
</item>
<item>
  <title>cropped-php-awake-for-code-programmer-wallpaper-hd.png</title>
  <link>https://fxcosta.wordpress.com/cropped-php-awake-for-code-programmer-wallpaper-hd-png/</link>
  <pubDate>Mon, 07 Sep 2015 03:36:45 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2015/09/cropped-php-awake-for-code-programmer-wallpaper-hd.png</guid>
  <description/>
  <content:encoded><![CDATA[http://fxcosta.files.wordpress.com/2015/09/cropped-php-awake-for-code-programmer-wallpaper-hd.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>57</wp:post_id>
  <wp:post_date>2015-09-07 03:36:45</wp:post_date>
  <wp:post_date_gmt>2015-09-07 03:36:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>cropped-php-awake-for-code-programmer-wallpaper-hd-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2015/09/cropped-php-awake-for-code-programmer-wallpaper-hd.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>cropped-cropped-php-awake-for-code-programmer-wallpaper-hd.png</title>
  <link>https://fxcosta.wordpress.com/cropped-cropped-php-awake-for-code-programmer-wallpaper-hd-png/</link>
  <pubDate>Mon, 07 Sep 2015 03:49:18 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2015/09/cropped-cropped-php-awake-for-code-programmer-wallpaper-hd.png</guid>
  <description/>
  <content:encoded><![CDATA[http://fxcosta.files.wordpress.com/2015/09/cropped-cropped-php-awake-for-code-programmer-wallpaper-hd.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>58</wp:post_id>
  <wp:post_date>2015-09-07 03:49:18</wp:post_date>
  <wp:post_date_gmt>2015-09-07 03:49:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>cropped-cropped-php-awake-for-code-programmer-wallpaper-hd-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2015/09/cropped-cropped-php-awake-for-code-programmer-wallpaper-hd.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>cropped-php-awake-for-code-programmer-wallpaper-hd1.png</title>
  <link>https://fxcosta.wordpress.com/cropped-php-awake-for-code-programmer-wallpaper-hd1-png/</link>
  <pubDate>Mon, 07 Sep 2015 03:49:39 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2015/09/cropped-php-awake-for-code-programmer-wallpaper-hd1.png</guid>
  <description/>
  <content:encoded><![CDATA[http://fxcosta.files.wordpress.com/2015/09/cropped-php-awake-for-code-programmer-wallpaper-hd1.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>59</wp:post_id>
  <wp:post_date>2015-09-07 03:49:39</wp:post_date>
  <wp:post_date_gmt>2015-09-07 03:49:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>cropped-php-awake-for-code-programmer-wallpaper-hd1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2015/09/cropped-php-awake-for-code-programmer-wallpaper-hd1.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>5P6R12c</title>
  <link>https://fxcosta.wordpress.com/5p6r12c/</link>
  <pubDate>Mon, 07 Sep 2015 03:53:28 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2015/09/5p6r12c.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>60</wp:post_id>
  <wp:post_date>2015-09-07 03:53:28</wp:post_date>
  <wp:post_date_gmt>2015-09-07 03:53:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>5p6r12c</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2015/09/5p6r12c.png</wp:attachment_url>
</item>
<item>
  <title>cropped-5p6r12c.png</title>
  <link>https://fxcosta.wordpress.com/cropped-5p6r12c-png/</link>
  <pubDate>Mon, 07 Sep 2015 03:53:41 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2015/09/cropped-5p6r12c.png</guid>
  <description/>
  <content:encoded><![CDATA[http://fxcosta.files.wordpress.com/2015/09/cropped-5p6r12c.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>61</wp:post_id>
  <wp:post_date>2015-09-07 03:53:41</wp:post_date>
  <wp:post_date_gmt>2015-09-07 03:53:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>cropped-5p6r12c-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2015/09/cropped-5p6r12c.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>cropped-5p6r12c1.png</title>
  <link>https://fxcosta.wordpress.com/cropped-5p6r12c1-png/</link>
  <pubDate>Mon, 07 Sep 2015 03:54:32 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">http://fxcosta.files.wordpress.com/2015/09/cropped-5p6r12c1.png</guid>
  <description/>
  <content:encoded><![CDATA[http://fxcosta.files.wordpress.com/2015/09/cropped-5p6r12c1.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>62</wp:post_id>
  <wp:post_date>2015-09-07 03:54:32</wp:post_date>
  <wp:post_date_gmt>2015-09-07 03:54:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>cropped-5p6r12c1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://fxcosta.files.wordpress.com/2015/09/cropped-5p6r12c1.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_custom_header_last_used_pub/independent-publisher</wp:meta_key>
    <wp:meta_value><![CDATA[1441598086]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
    <wp:meta_value><![CDATA[pub/independent-publisher]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Dual Boot (W8.1 + Mint) em um Acer Aspire E14</title>
  <link>https://fxcosta.wordpress.com/2015/12/28/dual-boot-w8-1-mint-em-um-acer-aspire-e14/</link>
  <pubDate>Mon, 28 Dec 2015 03:17:00 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">https://fxcosta.wordpress.com/?p=67</guid>
  <description/>
  <content:encoded><![CDATA[Esse post é mais como uma dica porque encontrei algumas dificuldades para montar um ambiente com Windows 8.1 e Linux Mint 17.2.

Nunca tinha trabalhado com um notebook mais recente que já tivesse vindo com o W8 de fábrica e com UEFI, por isso, tive um certo trabalho para encontrar uma solução, uma vez que, se você chegou até aqui, sabe que é de fato trabalhoso, ainda mais quando não se está tão acostumado com um ambiente Linux.<!--more-->

O motivo de ter um Dual Boot é simples: Linux para trabalhar (programar, pesquisar, etc) e Win32 para jogar. Simples. Por incrível que pareça, ficou mais fácil jogar algo, já que eu sempre ficava na promessa de testar um novo jogo.

Enfim, o modelo do notebook onde foi testado foi o Acer Aspire E14 (E5-471) com Windows 8.1 de fábrica. O método usado foi exatamente o mesmo que é encontrado em alguns artigos: primeiro dimensionar o HD para termos um espaço livre para nossa distro Linux, usar um LiveCD ou USB bootável, instalar a sua distro (que no meu caso foi o Mint 17.2) no espaço livre e... e aí, dependendo do seu notebook, como eu pude perceber, pode haver diversas situações.

A minha situação foi: não havia um GRUB no momento de boot do notebook. Ou seja, ou iniciava direto pra um sistema ou por outro. O que definia qual sistema seria iniciado era a opção de boot escolhida. Se fosse UEFI iniciava o Windows, se não fosse, iniciava direto no Mint.

A solução, a única que funcionou de todas as demais que testei, e que não foram poucas, foi a apresenta nesse vídeo:

http://www.youtube.com/watch?v=3QOfYC4LJRo

Que é basicamente desativar o UEFI, entrar no Linux, instalar e rodar um script chamado <a href="http://www.rodsbooks.com/refind/" target="_blank">rEFInd</a>, voltar a opção de boot para UEFI e pronto, no próximo boot teremos uma tela de escolha de qual sistema você deseja dar partida.

Sem mais delongas é isso, fica apenas como uma dica para quem tem esse problemas - e pude perceber que não são poucas - e, caso tenha dado certo ou dado errado comenta para descobrir se de fato é a melhor alternativa.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>67</wp:post_id>
  <wp:post_date>2015-12-28 03:17:00</wp:post_date>
  <wp:post_date_gmt>2015-12-28 03:17:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dual-boot-w8-1-mint-em-um-acer-aspire-e14</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="dualboot"><![CDATA[dualboot]]></category>
  <category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="refind"><![CDATA[refind]]></category>
  <category domain="post_tag" nicename="uefi"><![CDATA[uefi]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="windows"><![CDATA[windows]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[59574466]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[18171820938]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Iniciando com TDD #1 - Minha motivação e primeiro contato</title>
  <link>https://fxcosta.wordpress.com/2016/04/09/iniciando-com-tdd-1-minha-motivacao-e-primeiro-contato/</link>
  <pubDate>Sat, 09 Apr 2016 04:01:36 +0000</pubDate>
  <dc:creator>fx3costa0</dc:creator>
  <guid isPermaLink="false">https://fxcosta.wordpress.com/?p=70</guid>
  <description/>
  <content:encoded><![CDATA[E aí, pessoal!

Esse artigo foi escrito originalmente para o <a href="http://phpba.com.br/iniciando-com-tdd-1/">Blog PHP-BA</a>, então confere lá e aproveita que tem bastante conteúdo interessante. Valeu, galera da comunidade PHP-BA!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>70</wp:post_id>
  <wp:post_date>2016-04-09 04:01:36</wp:post_date>
  <wp:post_date_gmt>2016-04-09 04:01:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>iniciando-com-tdd-1-minha-motivacao-e-primeiro-contato</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[21604136158]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
